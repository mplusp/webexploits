
<body>
<?php
echo '<span style="color:blue;"> <a href="#dif" style="text-decoration:none">1. Eine Defination: SQL-Injection</a></span>';echo"<br><br>";
echo '<span style="color:blue;"> <a href="#uebersicht" style="text-decoration:none">2. Übersicht SQL-Injection Challenges</a></span>';echo"<br><br>";
echo '<span style="color:blue;"><a href="#massnahmen" style="text-decoration:none"> 3. Sicherheitsmaßnahmen gegen SQL-Injection</a> </span>';echo"<br><br>";
echo'<a href="../index.php">Zurück</a>';
echo' <div id ="dif" >
<h1>  SQL-Injection: Eine Defination   </h1>
 <span style="font-size: 16px;"> SQL-Injections sind häufig genutzte Attacke in Web-Anwendung. Die meisten Sicherheitslücke werden ausgenutzt um die Datenbankabfragen 
wie zum Beispiel ein Suchbegriff bei einer Suche oder der Benutzername bei einer Anmeldung. <br><br> Angreifer versuchen mithilfe Sonderzeichen auszunutzen, ob der Datenbank zugreifbar ist.Beispiele dafür sind:   </span><br><br> 
 1. SELECT * FROM ‘Produkt‘ WHERE ‘Name‘ LIKE ’%begriff%’; (Angreifbarer SQL-Query für eine Suche )<br><br>
2. DROP TABLE ‘Product‘;  (Gefärliche ausgeführbare Abfrage) <br><br>
 Es gibt unterschiedliche Arten von SQL-Injections. Dabei handelt es sich um die folgenden: 
<br><br> -> Error-based SQL-Injections.<br> -> Union-based SQL-Injections.<br> ->Boolean-based blind SQL-Injections.
<br> -> Time-based blind SQL-Injections.<br> -> Out-of-band blind SQL-Injections.</span><br><br></div>';
 

echo'<div id ="uebersicht"> <h1> Übersicht SQL-Injection Challenges </h1>
 <span style="font-size: 16px;"> SQL-Injection Challenge beiinhaltet 2 Challenges. Der Schwierigkeitsgrad der Challenges ist in einfach und mittel Stufe eingeteilt. 
Wenn du etwas Erfahrungen mit SQL-Injection hast, kann es sein, dass die Challenges einfach zu lösen sind. 
Ansonsten kannst du die Challenges Schritt für Schritt mittels Hinweisen meistern.
 Folgende Challenges wirst du im Rahmen der SQL-Injection demonstrieren: <br><br> 1. SQL-Injection angreifbare Login-Seite (einfach)<br> 
2. Union-based-Injection (mittel)<br><br> <h3 style="color:blue">1. SQL-Injection angreifbare Login-Seite </h3> Diese Challenge ist durch die Abfrage angreifbar implementiert.
 Das Ziel diese Challenge ist die Sicherheitslücke ausnutzen um die Daten von Datenbank anzeigen zu lassen. 
Erst nachdem du die Stufe 1 gelöst hast, kannst du den Flag für nächste Challenge erhalten. 
Wenn du nicht in der Lage bist die Challenge zu lösen, sind die Lösenungen verfügbar. <br></span> 
<h3 style="color:blue"> 2. Union-based-Injection </h3>
 <span style="font-size: 16px;"> UNION-SQL-Operator wird genutzt, um die Ergebnisse von zwei oder mehr SELECT-Anweisungen zu einem  Ergebnis zu kombinieren.
 In Dieser Challenge wirst du in 3 Schritten mit Hinweisen dein Flag für nächste Challenge finden. 
Der Flag für nächste Challenge ist die Antwort von "Wie viele Umsätze haben die Filialen <strong> insgesamt</strong> gemacht?".  </span></div>';

echo'<div id="massnahmen"> <h1 > 3. Sicherheitsmaßnahmen </h1>
<span style="font-size: 16px;">Wenn ein SQL-Datenbank SQL-Injection ausführbar ist, ist das Gefahr da, dass die Daten im Dantenbank sofort zerstört 
oder böswillig zugriefen werden. All das zu verhindern, gibt es einige effektive Methoden gegen SQL-Injection. An erster Stelle muss du vorbereitete Anweisungen 
in deinem Code intergrieren. Damit kannst du die Datenbankabfragen sicherer und zuverlässiger durchgeführen.Hier wird nicht die Rohabfrage an die Datenbank gesendet,
 sondern die Struktur der Abfrage mitgetteilt, die du senden möchtest. Zum Beispiel:<br><br> $stmt = $conn->prepare("INSERT INTO Product (Name, Preis) VALUES (?, ?)"); <br> 
$stmt->bind_param("sd", $Name, $Preis); <br><br> Andere mögliche Schutzen sind: <br><br>
 -> Benutzereingaben bereinigen ( mysql_real_escape_string() ) <br> -> Web Application Firewall
<br> -> Verwenden LIMIT und andere SQL-Kontrollen innerhalb von Abfragen <br> -> Zugriffskontrolle ( Festlegen von Datenbankberechtigungen und Trennen von Benutzern ) 
<br> -> Webserver in einer anderen Domain sperren <br> -> Auf der Webseite sollte kein Fehler angezeigt werden. </span></div>';
echo"<br><br>";
echo"<br><br>";

?>

</body>
